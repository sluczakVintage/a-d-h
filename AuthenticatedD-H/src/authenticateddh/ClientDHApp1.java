/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ClientDHApp1.java
 *
 * Created on 2011-01-20, 23:59:16
 */

package authenticateddh;

import java.math.BigInteger;
import java.util.TreeMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author malina
 */
public class ClientDHApp1 extends javax.swing.JFrame implements Runnable{

    private static ClientDHApp1 instance;
    TreeMap<Integer, MessageWindow> cMessageWindowsMap;
    //private int listIndex_;
    private DefaultListModel listModel;

    public static synchronized ClientDHApp1 getInstance() {
	if (instance == null) {
		instance = new ClientDHApp1();
	}
	return instance;
    }
    /** Creates new form ClientDHApp1 */
    public ClientDHApp1() {
        cMessageWindowsMap = new TreeMap();
        //initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonRozmowa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButtonDodaj = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemConnect = new javax.swing.JMenuItem();
        jMenuItemDisconnect = new javax.swing.JMenuItem();
        jMenuItemVerify = new javax.swing.JMenuItem();
        jMenuItemUserList = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Zalogowani użytkownicy:");

        jButtonRozmowa.setText("Rozpocznij rozmowę");
        jButtonRozmowa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRozmowaActionPerformed(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jButtonDodaj.setText("Dodaj Usera");
        jButtonDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItemConnect.setText("Connect");
        jMenuItemConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConnectActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemConnect);

        jMenuItemDisconnect.setText("Disconnect");
        jMenuItemDisconnect.setEnabled(false);
        jMenuItemDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDisconnectActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemDisconnect);

        jMenuItemVerify.setText("Verify");
        jMenuItemVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVerifyActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemVerify);

        jMenuItemUserList.setText("Download user list");
        jMenuItemUserList.setEnabled(false);
        jMenuItemUserList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUserListActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemUserList);

        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jButtonRozmowa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDodaj)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonDodaj))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRozmowa)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConnectActionPerformed


       CCurrentCommand.getInstance().setCurrentCommand(CCommandType.CT_REGISTER);
       CClientConnector.getInstance().startThread();
       //if(checkKey()) System.out.println("dziala weryfikacja");
       //else System.out.println("nie dziala weryfikacja");
    }//GEN-LAST:event_jMenuItemConnectActionPerformed

    private void jMenuItemVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVerifyActionPerformed
        //JOptionPane okno = new JOptionPane();
        JOptionPane.showMessageDialog(null, "Po wcisnieciu przyciku OK nastąpi weryfikacja klucza.\n Może to potrwać kilkanaście sekund", "Uwaga", JOptionPane.INFORMATION_MESSAGE);
        //okno.
        if(checkKey()) JOptionPane.showMessageDialog(null, "Weryfikacja kluczy zakonczona sukcesem", "Gratulacje", JOptionPane.INFORMATION_MESSAGE);
       else JOptionPane.showMessageDialog(null, "Weryfikacja kluczy nieudana", "Gratulacje", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemVerifyActionPerformed

    private void jButtonRozmowaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRozmowaActionPerformed
        // TODO add your handling code here:
        int index = jList1.getSelectedIndex();
        String znaleziony = (String) listModel.get(index);
        String[] wynik = znaleziony.split(" ");
        //addUserToList(wynik[0], wynik[1]);
        openMessageWindow(Integer.parseInt(wynik[0]), wynik[1]);
    }//GEN-LAST:event_jButtonRozmowaActionPerformed

    private void jButtonDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajActionPerformed
        // TODO add your handling code here:
        addUserToList(5, "Rafał");
    }//GEN-LAST:event_jButtonDodajActionPerformed

    private void jMenuItemUserListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUserListActionPerformed
        CCurrentCommand.getInstance().setCurrentCommand(CCommandType.CT_LIST);
    }//GEN-LAST:event_jMenuItemUserListActionPerformed

    private void jMenuItemDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDisconnectActionPerformed

       CClientConnector.getInstance().stopThread();
       cleanupUserList();
    }//GEN-LAST:event_jMenuItemDisconnectActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
    System.exit(0);        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void openMessageWindow(int ID, String nick){
        if(cMessageWindowsMap.containsKey(ID))JOptionPane.showMessageDialog(null, "Już prowadzisz rozmowę z tym użytkownikiem", "Błąd", JOptionPane.ERROR_MESSAGE);
        else{
            MessageWindow mw = new MessageWindow(ID, nick);
            //System.out.println("dodano usera o id " + Integer.toString(ID) + " " + nick);
            mw.setVisible(true);
            cMessageWindowsMap.put(ID, mw);
        }
    }

    private boolean checkKey(){
        while(CClientConstraints.getInstance().getID()== 0){}
        int sID = CClientConstraints.getInstance().getS_ID();
        BigInteger rID = CClientConstraints.getInstance().getR_ID();
        BigInteger generator = CClientConstraints.getInstance().getG();
        int ID = CClientConstraints.getInstance().getID();
        BigInteger y = CClientConstraints.getInstance().getY();
        BigInteger left = generator.pow(sID);
        BigInteger right = rID.multiply(y.pow(CClientConstraints.H1(rID.add(BigInteger.valueOf(ID)))));
        return true;
    }

    synchronized public void cleanupUserList() {
        listModel.clear();
    }

    synchronized public void toggleButtons() {
       boolean lastState = jMenuItemConnect.isEnabled();
            jMenuItemDisconnect.setEnabled(lastState);
            jMenuItemUserList.setEnabled(lastState);
            jMenuItemConnect.setEnabled(!lastState);

    }
    synchronized public void addUserToList(int ID, String nick){
        //listModel.insertElementAt(nick, ID);
        //listModel.add(ID, nick);
        //listModel.setSize(10);
        //listModel.setElementAt(nick, ID);
        listModel.addElement(Integer.toString(ID) + " " + nick);
    }
    /**
    * @param args the command line arguments
    */
            public void run() {
                //new ClientDHApp().setVisible(true);
                initComponents();
                listModel = new DefaultListModel();
                //listModel.addElement("Jane Doe");
                //listModel.ensureCapacity(10);
                jList1.setModel(listModel);
               // ListModel lm = jList1.getModel();
                //listModel = (DefaultListModel) lm;
                setVisible(true);
                //CCurrentCommand.getInstance().setCurrentCommand("Register");
                CClientConnector.getInstance().start();//.connect("localhost");
                //System.out.println("Podłączyłem sie");
            }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodaj;
    private javax.swing.JButton jButtonRozmowa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItemConnect;
    private javax.swing.JMenuItem jMenuItemDisconnect;
    private javax.swing.JMenuItem jMenuItemUserList;
    private javax.swing.JMenuItem jMenuItemVerify;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
